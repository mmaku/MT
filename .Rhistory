source('C:/Users/Martyna Strauchmann/Dropbox/04 Praca magisterska/gSLOPEtesting/!04 ADMMbenchmarking/clusterGraphIter.R', echo=TRUE)
# Written by Micha≈Ç Makowski
getwd()
setwd("C:/Users/Martyna Strauchmann/Dropbox/04 Praca magisterska/gSLOPEtesting/!04 ADMMbenchmarking")
source('C:/Users/Martyna Strauchmann/Dropbox/04 Praca magisterska/gSLOPEtesting/!04 ADMMbenchmarking/clusterGraphIter.R', echo=TRUE)
finalResults
paste0("./!02 Data/01 Binded/", filenameAll, ".RData")
a <- unique(finalResults$alpha)
a
head(finalResults)
head(finalResults)
names(finalResults)
library(dplyr)
library(tidyr)
library(ggplot2)
names(finalResults)
dupa <- huge.generator(n=15, d=20, graph = "cluster",v=0.5, g=0.5, prob=1)
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0.5, g=0.5, prob=1)
dupa <- huge.generator(n=20, d=10, graph = "cluster",v=0.5, g=0.5, prob=1)
dupa <- huge.generator(n=30, d=30, graph = "cluster",v=0.5, g=0.5, prob=1)
dupa <- huge.generator(n=10, d=10, graph = "cluster",v=0.5, u=0.5, prob=1)
dupa
dupa$omega
dupa$sigma
dupa$omega
dupa$sigma
dupa <- huge.generator(n=10, d=10, graph = "cluster",v=0.5, u=0, prob=1)
dupa$omega
dupa$sigma
dupa <- huge.generator(n=10, d=10, graph = "cluster",prob=1)
dupa$omega
dupa$sigma
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0.5, u=0, prob=1)
dupa$omega
dupa$sigma
dupa$omega
scale(dupa$omega)
dupa$omega
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0, u=0, prob=1)
dupa$omega
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0, u=1, prob=1)
dupa$omega
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0, u=2, prob=1)
dupa$omega
dupa$sigma
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0, u=0, prob=1)
dupa$omega
dupa$sigma
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0.5, u=0, prob=1)
dupa$omega
dupa$sigma
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0.5, u=0.4, prob=1)
dupa$omega
dupa$sigma
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0.5, u=0.5, prob=1)
dupa$omega
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0.5, u=0.4, prob=1)
dupa$omega
dupa$sigma
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0.5, u=0.5, prob=1)
dupa$omega
dupa$sigm5
dupa$sigma
cor(dupa$data)
cov(dupa$data)
dupa <- huge.generator(n=2000, d=20, graph = "cluster",v=0.5, u=0.5, prob=1)
cov(dupa$data)
cor(dupa$data)
cor(scale(dupa$data))
cov(scale(dupa$data))
cor(scale(dupa$data))
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0.5, u=0.5, prob=1)
theta <- as.matrix(dupa$theta)
theta
v=0.5
u=0.5
theta <- as.matrix(dupa$theta)
omega = theta*v
omega
abs(min(eigen(omega)$values))
# make omega positive definite and standardized
diag(omega) = abs(min(eigen(omega)$values)) + 0.1 + u
omega
sigma = cov2cor(solve(omega))
sigma
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0.5, u=0.5, prob=0.5)
theta <- as.matrix(dupa$theta)
omega = theta*v
omega
abs(min(eigen(omega)$values))
omega
diag(omega) = v + u
omega
sigma = solve(omega)
# generate multivariate normal data
x = mvrnorm(n,rep(0,d),sigma)
d=20
# generate multivariate normal data
x = mvrnorm(n,rep(0,d),sigma)
# make omega positive definite and standardized
diag(omega) = abs(min(eigen(omega)$values))  + u
# make omega positive definite and standardized
diag(omega) = abs(min(eigen(omega)$values)) + u
omega = theta*v
# make omega positive definite and standardized
diag(omega) = abs(min(eigen(omega)$values)) + u
sigma = cov2cor(solve(omega))
omega = solve(sigma)
# generate multivariate normal data
x = mvrnorm(n,rep(0,d),sigma)
n
n=20
# generate multivariate normal data
x = mvrnorm(n,rep(0,d),sigma)
sigmahat = cor(x)
sigmahat
omega
sigma
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0.5, u=0.5, prob=1)
theta <- as.matrix(dupa$theta)
omega = theta*v
# make omega positive definite and standardized
diag(omega) = abs(min(eigen(omega)$values)) + u
omega
solve(omega)
cov2cor(solve(omega))
sigma = solve(omega)
solve(sigma)
# generate multivariate normal data
x = mvrnorm(n,rep(0,d),sigma)
sigmahat = cor(x)
sigmahat
sigmahat = cov(x)
sigmahat
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0.5, u=0.5, prob=0.1)
theta <- as.matrix(dupa$theta)
omega = theta*v
# make omega positive definite and standardized
diag(omega) = abs(min(eigen(omega)$values)) + u
sigma = solve(omega)
omega = solve(sigma)
# generate multivariate normal data
x = mvrnorm(n,rep(0,d),sigma)
sigmahat = cov(x)
sigmahat
sigma
omega
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0.5, u=0.5, prob=0.1)
theta <- as.matrix(dupa$theta)
omega = theta*v
# make omega positive definite and standardized
diag(omega) = abs(min(eigen(omega)$values)) + u
sigma = cov2cor(solve(omega))
omega = solve(sigma)
# generate multivariate normal data
x = mvrnorm(n,rep(0,d),sigma)
sigmahat = cor(x)
omega
sigma
sigma
cov(dupa$data)
cor(scale((dupa$data)))
cor(dupa$data)
cov(scale((dupa$data)))
dupa <- huge.generator(n=20, d=20, graph = "cluster",v=0.5, u=0.5, prob=0.1)
dupa$omega
a <- unique(finalResults$alpha)
plotFilename <- sprintf("./!01 Plots/clusterGraph/gslope_holm_glasso_block_diagonal_Iter_alpha_%s.png", alpha)
plotFilename <- sprintf("./!01 Plots/clusterGraph/gslope_holm_glasso_block_diagonal_Iter_alpha_%s.png", a)
finalResults %>%
dplyr::select(-c(penalizeDiagonal))
finalResults %>%
dplyr::select(-c(penalizeDiagonal))
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value")
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = factor(iterations), y = value, color = procedure)) +
geom_line() +
facet_wrap(vars(metric), labeller = label_context, scales = "fixed")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = factor(iterations), y = value, color = procedure)) +
geom_line() +
facet_wrap(vars(metric), labeller = label_context, scales = "fixed")
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(y = factor(iterations), x = value, color = procedure)) +
geom_line() +
facet_wrap(vars(metric), labeller = label_context, scales = "fixed")
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, color = procedure)) +
geom_line()
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, color = procedure)) +
geom_line() +
facet_grid(rows = metric, labeller = label_context)
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = vars(iterations), y = value, color = procedure))
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, color = procedure)) +
geom_line() +
facet_grid(rows = vars(metric), labeller = label_context)
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, color = procedure)) +
geom_step() +
facet_grid(rows = vars(metric), labeller = label_context)
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, color = procedure)) +
geom_point() +
facet_grid(rows = vars(metric), labeller = label_context)
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, color = metric)) +
geom_point() +
facet_grid(rows = vars(procedure), labeller = label_context)
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, color = metric)) +
geom_point() +
facet_wrap(rows = vars(procedure, graph.v), labeller = label_context)
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, color = metric)) +
geom_point() +
facet_wrap(rows = vars(procedure, graph.u), labeller = label_context)
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, color = metric)) +
geom_point() +
facet_wrap(vars(procedure, graph.u), labeller = label_context)
finalResults %>%
dplyr::select(-c(penalizeDiagonal)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, shape = metric)) +
geom_point() +
facet_wrap(vars(procedure, graph.u), labeller = label_context)
finalResults %>%
dplyr::select(-c(penalizeDiagonal, localFDR)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, shape = color)) +
geom_point() +
facet_wrap(vars(procedure, graph.u), labeller = label_context)
finalResults %>%
dplyr::select(-c(penalizeDiagonal, localFDR)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, color = metric)) +
geom_point() +
facet_wrap(vars(procedure, graph.u), labeller = label_context)
finalResults %>%
dplyr::select(-c(penalizeDiagonal, localFDR)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, color = metric)) +
geom_point() +
facet_grid(vars(procedure, graph.u), labeller = label_context)
finalResults %>%
dplyr::select(-c(penalizeDiagonal, localFDR)) %>%
gather(FDR:Power, key = "metric", value = "value") %>%
group_by(n, p, alpha, graph.prob, graph.v, graph.u, procedure, metric) %>%
ggplot(aes(x = iterations, y = value, color = metric)) +
geom_point() +
facet_grid(cols = vars(procedure), rows = vars(graph.u), labeller = label_context)
