library(doSNOW)
library(foreach)
library(dplyr)
source("fastSimulationsFunctions.R")
require(dplyr, quietly = TRUE)
require(tidyr, quietly = TRUE)
require(ggplot2, quietly = TRUE)
require(tikzDevice, quietly = TRUE)
require(xtable, quietly = TRUE)
load("./!02 Data/01 Binded/01 AllOne/AllOneSimulations_Cl_scaled_FDR_Prob@18_10_28_00_36#288.RData")
p    <- unique(bindedResults$p)
prob <- unique(bindedResults$graph.prob)[1]
g    <- unique(bindedResults$graph.g)
gt   <- unique(bindedResults$graphType)
a    <- unique(bindedResults$alpha)[1]
bindedResults %>%
mutate(SNR = round((graph.v+graph.u)/graph.v, digits = 2)) %>%
select(-c(SP, algIter, p, graphType, penalizeDiagonal, scaled, iterations, graph.g)) %>%
as_tibble() -> bindedResults
# bindedResults %>%
#     select(-c(localFDR, penalizeDiagonal, iterations, SP)) %>%
#     filter(procedure != "gLASSO") %>%
#     as_tibble() -> bindedResults
bindedResults$SNR <- as.factor(bindedResults$SNR)
rowLabels <- sapply(levels(bindedResults$SNR),
function(x) paste0("$SNR=", x,"$"))
colLabels <- sapply(unique(bindedResults$graph.prob),
function(x) paste0("$prob(x_{ij}\\neq0)=", x, "$"))
names(colLabels) <- unique(bindedResults$graph.prob)
